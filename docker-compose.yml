version: '3.7'
services:
  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: development
    command: npm run start:dev api-gateway
    env_file:
      - ./apps/api-gateway/.env
    depends_on:
      - postgres
      - zookeeper
      - kafka
      - transaction
      - anti-fraud
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports: 
      - 3000:3000
  transaction:
    build:
      context: .
      dockerfile: ./apps/transaction/Dockerfile
      target: development
    command: npm run start:dev transaction
    env_file:
      - ./apps/transaction/.env
    depends_on:
      - postgres
      - zookeeper
      - kafka
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  anti-fraud:
    build:
      context: .
      dockerfile: ./apps/anti-fraud/Dockerfile
      target: development
    command: npm run start:dev anti-fraud
    env_file:
      - ./apps/anti-fraud/.env
    depends_on:
      - zookeeper
      - kafka
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  postgres:
    image: postgres:14
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=test_db
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [zookeeper]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092
